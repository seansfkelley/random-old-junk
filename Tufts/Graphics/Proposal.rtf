{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf320
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww12240\viewh15840\viewkind1
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 Sean Kelley\
Ray Tracer Project Proposal\
\
	Ray tracing is in interesting problem in that it attempts to recreate the properties and interactions of light in all its complex ways as accurately as is computationally feasible, unlike real-time rendering techniques (like those seen in videogames) that sacrifice huge swaths of accuracy for performance. The subject of ray tracing has admittedly been beaten to death by countless people working on ray tracers with an equally innumerable amount of papers on the subject. Why are they so popular? Probably because they provide an excellent framework that is mind-bogglingly extensible (the details of which I'm not going to go into here).\
	The combination of simple core ideas, incredible extendability, and ability to produce very realistic images is why I find ray tracers so compelling. They're also an excellent means to learn about everything from simple graphics-related math to the intricate details of various color and lighting models.\
	I already have a reasonably performant ray tracer written in C++ with the aid of a single image output library (for the sake of convenience) and various Boost libraries (none of which are involved in the ray tracing, but instead performance enhancements). The actual ray tracing functionality is entirely my own creation. This ray tracer already includes many important features: reflection, refraction and support for arbitrary geometric shapes, to name a few. The lighting model, however, is pretty simple and doesn't perform realistically for complex scenes.\
	I propose to take the next major step with this ray tracer and implement a much more complex lighting model that takes it beyond simple diffuse and specular lighting by augmenting the existing model with global illumination and caustics via photon mapping. Global illumination should allow me to place less emphasis on the artificial "ambient light" calculation and instead have scenes lit more realistically based on where light sources are. Caustics will complement global illumination, making reflective and refractive surfaces not just modify the camera rays, but light itself in order to reproduce the realistic refocusing effect such surfaces have on light.}