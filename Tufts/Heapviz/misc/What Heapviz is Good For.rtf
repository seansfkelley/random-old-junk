{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww12240\viewh15840\viewkind1
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\fs24 \cf0 What Heapviz is Good For\
\
	Heapviz is a tool designed for all programmers, whether they are in industry, academia, or simply hobbyists, intended to facilitate program development when used alongside traditional tools.\
	Heapviz does something that's never been done before: visualizing the entirety of a program's memory at once. Traditional debuggers either don't provide a visualization or show the wrong amount of information for general usage - millions of details or only a very select few. Heapviz strikes a happy medium between these two, summarizing a program's memory by combining and collapsing repeated structures. After summarization, the data is a schematized version of the original data, revealing patterns in data structures without being bogged down in details.\
	Heapviz allows the user to push, pull, show, hide and generally rearrange the summarized data to help them familiarize themselves with a new code base quickly and visually debug programs.\
	Seeing a summarized program is an excellent complement to reading source code and documentation when it comes to learning a new code base. Reading gives the user a mental image of what's expected, but Heapviz has the unique ability to draw a picture of what actually happens at the conceptual level, ignoring repetitive or uninteresting details. It can be used to reveal patterns in a program's data structures that were unexpected or too complex to understand from reading, as well as give the user an idea of how important or common each data structure is.\
	Once a programmer has gained a sense of familiarity with a particular code base, there is still a use for Heapviz: visual debugging. Visual debuggers exist, but do not provide the user with an easily-understood conceptual context for the bug they are trying to find, nor do they support the rich set of interactions that Heapviz does that allow the user to pull apart the haystack and find the needle. Many common data structures have a very well-defined hierarchy that any programmer can identify when drawn on paper. Heapviz trivializes identifying traditionally hard-to-find bugs in data structures, or the connections between them, by presenting the user with just such an image. \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 What Heapviz is Good For -- Short Version\
\
	Heapviz is a tool designed for all programmers, whether they are in industry, academia, or simply hobbyists, intended to facilitate program development when used alongside traditional tools.  Heapviz has the unique ability to visualize the entirety of a program's memory at once by summarizing it. Summarization converts the data into a schematized form, revealing patterns in data structures without getting bogged down in details.\
	Heapviz allows users to push, pull, show, hide and generally rearrange the summarized data to visually debug programs or to quickly familiarize themselves with a new code base. It shows the user a conceptual context for the bug they are trying to find and supplies a rich set of interactions to navigate the data -- trivializing bug-finding in data structures by presenting the  structures similarly to how the user would draw them manually. Heapviz also assists learning an unfamiliar code base by complementing the code with an image of what running the program does at the conceptual level -- revealing patterns in a program's data structures that were unexpected or too complex to understand from the source code alone.}