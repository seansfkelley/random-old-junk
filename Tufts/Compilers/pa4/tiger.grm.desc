
state 0:

	program : . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	program	goto 143
	exp	goto 3
	lvalue	goto 2
	arith	goto 1

	.	error


state 1:

	exp : arith .  (reduce by rule 24)



	.	reduce by rule 24


state 2:

	exp : lvalue .  (reduce by rule 31)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 17
	DOT	shift 16
	ASSIGN	shift 15


	.	reduce by rule 31


state 3:

	program : exp .  (reduce by rule 1)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 1


state 4:

	exp : NIL .  (reduce by rule 20)



	.	reduce by rule 20


state 5:

	exp : BREAK .  (reduce by rule 37)



	.	reduce by rule 37


state 6:

	exp : LET . decs IN expseq END 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decs	goto 34
	tydec	goto 33
	vardec	goto 32
	fundec	goto 31
	empty	goto 30

	.	reduce by rule 0


state 7:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 38


	.	error


state 8:

	exp : WHILE . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 39
	lvalue	goto 2
	arith	goto 1

	.	error


state 9:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 40
	lvalue	goto 2
	arith	goto 1

	.	error


state 10:

	exp : MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 41
	lvalue	goto 2
	arith	goto 1

	.	error


state 11:

	exp : LPAREN . expseq RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 44
	lvalue	goto 2
	expseq	goto 43
	arith	goto 1
	empty	goto 42

	.	reduce by rule 0


state 12:

	exp : STRING .  (reduce by rule 23)



	.	reduce by rule 23


state 13:

	exp : INT .  (reduce by rule 22)



	.	reduce by rule 22


state 14:

	exp : ID . LPAREN explist RPAREN 
	exp : ID . LBRACE reclist RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	exp : ID .  (reduce by rule 29)
	exp : ID . ASSIGN exp 
	lvalue : ID . DOT ID 
	lvalue : ID . LBRACK exp RBRACK 

	LPAREN	shift 49
	LBRACK	shift 48
	LBRACE	shift 47
	DOT	shift 46
	ASSIGN	shift 45


	.	reduce by rule 29


state 15:

	exp : lvalue ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 50
	lvalue	goto 2
	arith	goto 1

	.	error


state 16:

	lvalue : lvalue DOT . ID 

	ID	shift 51


	.	error


state 17:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 52
	lvalue	goto 2
	arith	goto 1

	.	error


state 18:

	arith : exp OR . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 53
	lvalue	goto 2
	arith	goto 1

	.	error


state 19:

	arith : exp AND . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 54
	lvalue	goto 2
	arith	goto 1

	.	error


state 20:

	arith : exp GE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 55
	lvalue	goto 2
	arith	goto 1

	.	error


state 21:

	arith : exp GT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 56
	lvalue	goto 2
	arith	goto 1

	.	error


state 22:

	arith : exp LE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 57
	lvalue	goto 2
	arith	goto 1

	.	error


state 23:

	arith : exp LT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 58
	lvalue	goto 2
	arith	goto 1

	.	error


state 24:

	arith : exp NEQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 59
	lvalue	goto 2
	arith	goto 1

	.	error


state 25:

	arith : exp EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 60
	lvalue	goto 2
	arith	goto 1

	.	error


state 26:

	arith : exp DIVIDE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 61
	lvalue	goto 2
	arith	goto 1

	.	error


state 27:

	arith : exp TIMES . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 62
	lvalue	goto 2
	arith	goto 1

	.	error


state 28:

	arith : exp MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 63
	lvalue	goto 2
	arith	goto 1

	.	error


state 29:

	arith : exp PLUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 64
	lvalue	goto 2
	arith	goto 1

	.	error


state 30:

	decs : empty .  (reduce by rule 5)



	.	reduce by rule 5


state 31:

	decs : fundec . decs 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decs	goto 65
	tydec	goto 33
	vardec	goto 32
	fundec	goto 31
	empty	goto 30

	.	reduce by rule 0


state 32:

	decs : vardec . decs 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decs	goto 66
	tydec	goto 33
	vardec	goto 32
	fundec	goto 31
	empty	goto 30

	.	reduce by rule 0


state 33:

	decs : tydec . decs 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decs	goto 67
	tydec	goto 33
	vardec	goto 32
	fundec	goto 31
	empty	goto 30

	.	reduce by rule 0


state 34:

	exp : LET decs . IN expseq END 

	IN	shift 68


	.	error


state 35:

	tydec : TYPE . ID EQ ty tydec 
	tydec : TYPE . ID EQ ty 

	ID	shift 69


	.	error


state 36:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 70


	.	error


state 37:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp fundec 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp fundec 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 71


	.	error


state 38:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 72


	.	error


state 39:

	exp : WHILE exp . DO exp 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 73


	.	error


state 40:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	shift 74


	.	error


state 41:

	exp : MINUS exp .  (reduce by rule 25)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 



	.	reduce by rule 25


state 42:

	expseq : empty .  (reduce by rule 45)



	.	reduce by rule 45


state 43:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 75


	.	error


state 44:

	expseq : exp .  (reduce by rule 43)
	expseq : exp . SEMICOLON expseq 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	SEMICOLON	shift 76
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 43


state 45:

	exp : ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 77
	lvalue	goto 2
	arith	goto 1

	.	error


state 46:

	lvalue : ID DOT . ID 

	ID	shift 78


	.	error


state 47:

	exp : ID LBRACE . reclist RBRACE 

	ID	shift 81

	reclist	goto 80
	empty	goto 79

	.	reduce by rule 0


state 48:

	exp : ID LBRACK . exp RBRACK OF exp 
	lvalue : ID LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 82
	lvalue	goto 2
	arith	goto 1

	.	error


state 49:

	exp : ID LPAREN . explist RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 85
	lvalue	goto 2
	explist	goto 84
	arith	goto 1
	empty	goto 83

	.	reduce by rule 0


state 50:

	exp : lvalue ASSIGN exp .  (reduce by rule 32)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 32


state 51:

	lvalue : lvalue DOT ID .  (reduce by rule 39)



	.	reduce by rule 39


state 52:

	lvalue : lvalue LBRACK exp . RBRACK 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	RBRACK	shift 86
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 53:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp OR exp .  (reduce by rule 54)
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19


	.	reduce by rule 54


state 54:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp AND exp .  (reduce by rule 53)
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20


	.	reduce by rule 53


state 55:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 
	arith : exp GE exp .  (reduce by rule 60)

	EOF	reduce by rule 60
	COMMA	reduce by rule 60
	SEMICOLON	reduce by rule 60
	RPAREN	reduce by rule 60
	RBRACK	reduce by rule 60
	RBRACE	reduce by rule 60
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 60
	OR	reduce by rule 60
	THEN	reduce by rule 60
	ELSE	reduce by rule 60
	TO	reduce by rule 60
	DO	reduce by rule 60
	IN	reduce by rule 60
	END	reduce by rule 60
	FUNCTION	reduce by rule 60
	VAR	reduce by rule 60
	TYPE	reduce by rule 60


	.	error


state 56:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp GT exp .  (reduce by rule 58)
	arith : exp . LE exp 
	arith : exp . GE exp 

	EOF	reduce by rule 58
	COMMA	reduce by rule 58
	SEMICOLON	reduce by rule 58
	RPAREN	reduce by rule 58
	RBRACK	reduce by rule 58
	RBRACE	reduce by rule 58
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 58
	OR	reduce by rule 58
	THEN	reduce by rule 58
	ELSE	reduce by rule 58
	TO	reduce by rule 58
	DO	reduce by rule 58
	IN	reduce by rule 58
	END	reduce by rule 58
	FUNCTION	reduce by rule 58
	VAR	reduce by rule 58
	TYPE	reduce by rule 58


	.	error


state 57:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp LE exp .  (reduce by rule 59)
	arith : exp . GE exp 

	EOF	reduce by rule 59
	COMMA	reduce by rule 59
	SEMICOLON	reduce by rule 59
	RPAREN	reduce by rule 59
	RBRACK	reduce by rule 59
	RBRACE	reduce by rule 59
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 59
	OR	reduce by rule 59
	THEN	reduce by rule 59
	ELSE	reduce by rule 59
	TO	reduce by rule 59
	DO	reduce by rule 59
	IN	reduce by rule 59
	END	reduce by rule 59
	FUNCTION	reduce by rule 59
	VAR	reduce by rule 59
	TYPE	reduce by rule 59


	.	error


state 58:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp LT exp .  (reduce by rule 57)
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	EOF	reduce by rule 57
	COMMA	reduce by rule 57
	SEMICOLON	reduce by rule 57
	RPAREN	reduce by rule 57
	RBRACK	reduce by rule 57
	RBRACE	reduce by rule 57
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 57
	OR	reduce by rule 57
	THEN	reduce by rule 57
	ELSE	reduce by rule 57
	TO	reduce by rule 57
	DO	reduce by rule 57
	IN	reduce by rule 57
	END	reduce by rule 57
	FUNCTION	reduce by rule 57
	VAR	reduce by rule 57
	TYPE	reduce by rule 57


	.	error


state 59:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp NEQ exp .  (reduce by rule 56)
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	EOF	reduce by rule 56
	COMMA	reduce by rule 56
	SEMICOLON	reduce by rule 56
	RPAREN	reduce by rule 56
	RBRACK	reduce by rule 56
	RBRACE	reduce by rule 56
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 56
	OR	reduce by rule 56
	THEN	reduce by rule 56
	ELSE	reduce by rule 56
	TO	reduce by rule 56
	DO	reduce by rule 56
	IN	reduce by rule 56
	END	reduce by rule 56
	FUNCTION	reduce by rule 56
	VAR	reduce by rule 56
	TYPE	reduce by rule 56


	.	error


state 60:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp EQ exp .  (reduce by rule 55)
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	EOF	reduce by rule 55
	COMMA	reduce by rule 55
	SEMICOLON	reduce by rule 55
	RPAREN	reduce by rule 55
	RBRACK	reduce by rule 55
	RBRACE	reduce by rule 55
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 55
	OR	reduce by rule 55
	THEN	reduce by rule 55
	ELSE	reduce by rule 55
	TO	reduce by rule 55
	DO	reduce by rule 55
	IN	reduce by rule 55
	END	reduce by rule 55
	FUNCTION	reduce by rule 55
	VAR	reduce by rule 55
	TYPE	reduce by rule 55


	.	error


state 61:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp DIVIDE exp .  (reduce by rule 52)
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 



	.	reduce by rule 52


state 62:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp TIMES exp .  (reduce by rule 51)
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 



	.	reduce by rule 51


state 63:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp MINUS exp .  (reduce by rule 50)
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 50


state 64:

	arith : exp . PLUS exp 
	arith : exp PLUS exp .  (reduce by rule 49)
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 49


state 65:

	decs : fundec decs .  (reduce by rule 4)



	.	reduce by rule 4


state 66:

	decs : vardec decs .  (reduce by rule 3)



	.	reduce by rule 3


state 67:

	decs : tydec decs .  (reduce by rule 2)



	.	reduce by rule 2


state 68:

	exp : LET decs IN . expseq END 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 44
	lvalue	goto 2
	expseq	goto 87
	arith	goto 1
	empty	goto 42

	.	reduce by rule 0


state 69:

	tydec : TYPE ID . EQ ty tydec 
	tydec : TYPE ID . EQ ty 

	EQ	shift 88


	.	error


state 70:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 90
	ASSIGN	shift 89


	.	error


state 71:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp fundec 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp fundec 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 91


	.	error


state 72:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 92
	lvalue	goto 2
	arith	goto 1

	.	error


state 73:

	exp : WHILE exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 93
	lvalue	goto 2
	arith	goto 1

	.	error


state 74:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 94
	lvalue	goto 2
	arith	goto 1

	.	error


state 75:

	exp : LPAREN expseq RPAREN .  (reduce by rule 21)



	.	reduce by rule 21


state 76:

	expseq : exp SEMICOLON . expseq 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 44
	lvalue	goto 2
	expseq	goto 95
	arith	goto 1
	empty	goto 42

	.	reduce by rule 0


state 77:

	exp : ID ASSIGN exp .  (reduce by rule 30)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 30


state 78:

	lvalue : ID DOT ID .  (reduce by rule 40)



	.	reduce by rule 40


state 79:

	reclist : empty .  (reduce by rule 63)



	.	reduce by rule 63


state 80:

	exp : ID LBRACE reclist . RBRACE 

	RBRACE	shift 96


	.	error


state 81:

	reclist : ID . EQ exp 
	reclist : ID . EQ exp COMMA reclist 

	EQ	shift 97


	.	error


state 82:

	exp : ID LBRACK exp . RBRACK OF exp 
	lvalue : ID LBRACK exp . RBRACK 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	RBRACK	shift 98
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 83:

	explist : empty .  (reduce by rule 48)



	.	reduce by rule 48


state 84:

	exp : ID LPAREN explist . RPAREN 

	RPAREN	shift 99


	.	error


state 85:

	explist : exp .  (reduce by rule 46)
	explist : exp . COMMA explist 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	COMMA	shift 100
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 46


state 86:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 41)



	.	reduce by rule 41


state 87:

	exp : LET decs IN expseq . END 

	END	shift 101


	.	error


state 88:

	tydec : TYPE ID EQ . ty tydec 
	tydec : TYPE ID EQ . ty 

	ID	shift 105
	LBRACE	shift 104
	ARRAY	shift 103

	ty	goto 102

	.	error


state 89:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 106
	lvalue	goto 2
	arith	goto 1

	.	error


state 90:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 107


	.	error


state 91:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp fundec 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp fundec 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 110

	tyfields	goto 109
	empty	goto 108

	.	reduce by rule 0


state 92:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	TO	shift 111


	.	error


state 93:

	exp : WHILE exp DO exp .  (reduce by rule 35)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 35


state 94:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 34)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	ELSE	shift 112


	.	reduce by rule 34


state 95:

	expseq : exp SEMICOLON expseq .  (reduce by rule 44)



	.	reduce by rule 44


state 96:

	exp : ID LBRACE reclist RBRACE .  (reduce by rule 27)



	.	reduce by rule 27


state 97:

	reclist : ID EQ . exp 
	reclist : ID EQ . exp COMMA reclist 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 113
	lvalue	goto 2
	arith	goto 1

	.	error


state 98:

	exp : ID LBRACK exp RBRACK . OF exp 
	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 42)

	OF	shift 114


	.	reduce by rule 42


state 99:

	exp : ID LPAREN explist RPAREN .  (reduce by rule 26)



	.	reduce by rule 26


state 100:

	explist : exp COMMA . explist 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 85
	lvalue	goto 2
	explist	goto 115
	arith	goto 1
	empty	goto 83

	.	reduce by rule 0


state 101:

	exp : LET decs IN expseq END .  (reduce by rule 38)



	.	reduce by rule 38


state 102:

	tydec : TYPE ID EQ ty . tydec 
	tydec : TYPE ID EQ ty .  (reduce by rule 7)

	TYPE	shift 35

	tydec	goto 116

	.	reduce by rule 7


state 103:

	ty : ARRAY . OF ID 

	OF	shift 117


	.	error


state 104:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 110

	tyfields	goto 118
	empty	goto 108

	.	reduce by rule 0


state 105:

	ty : ID .  (reduce by rule 14)



	.	reduce by rule 14


state 106:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 8)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 8


state 107:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 119


	.	error


state 108:

	tyfields : empty .  (reduce by rule 19)



	.	reduce by rule 19


state 109:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 120


	.	error


state 110:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 121


	.	error


state 111:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 122
	lvalue	goto 2
	arith	goto 1

	.	error


state 112:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 123
	lvalue	goto 2
	arith	goto 1

	.	error


state 113:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 
	reclist : ID EQ exp .  (reduce by rule 61)
	reclist : ID EQ exp . COMMA reclist 

	COMMA	shift 124
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 61


state 114:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 125
	lvalue	goto 2
	arith	goto 1

	.	error


state 115:

	explist : exp COMMA explist .  (reduce by rule 47)



	.	reduce by rule 47


state 116:

	tydec : TYPE ID EQ ty tydec .  (reduce by rule 6)



	.	reduce by rule 6


state 117:

	ty : ARRAY OF . ID 

	ID	shift 126


	.	error


state 118:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 127


	.	error


state 119:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 128
	lvalue	goto 2
	arith	goto 1

	.	error


state 120:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 130
	EQ	shift 129


	.	error


state 121:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 131


	.	error


state 122:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 132


	.	error


state 123:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 33)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 33


state 124:

	reclist : ID EQ exp COMMA . reclist 

	ID	shift 81

	reclist	goto 133
	empty	goto 79

	.	reduce by rule 0


state 125:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 28)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 28


state 126:

	ty : ARRAY OF ID .  (reduce by rule 16)



	.	reduce by rule 16


state 127:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 15)



	.	reduce by rule 15


state 128:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 9)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 9


state 129:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 134
	lvalue	goto 2
	arith	goto 1

	.	error


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 135


	.	error


state 131:

	tyfields : ID COLON ID .  (reduce by rule 17)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 136


	.	reduce by rule 17


state 132:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 137
	lvalue	goto 2
	arith	goto 1

	.	error


state 133:

	reclist : ID EQ exp COMMA reclist .  (reduce by rule 62)



	.	reduce by rule 62


state 134:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp . fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 12)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	FUNCTION	shift 37

	fundec	goto 138

	.	reduce by rule 12


state 135:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 139


	.	error


state 136:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 110

	tyfields	goto 140
	empty	goto 108

	.	reduce by rule 0


state 137:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 36)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 36


state 138:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp fundec .  (reduce by rule 10)



	.	reduce by rule 10


state 139:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 141
	lvalue	goto 2
	arith	goto 1

	.	error


state 140:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 18)



	.	reduce by rule 18


state 141:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp . fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 13)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	FUNCTION	shift 37

	fundec	goto 142

	.	reduce by rule 13


state 142:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp fundec .  (reduce by rule 11)



	.	reduce by rule 11


state 143:


	EOF	accept


	.	error

486 of 1027 action table entries left after compaction
156 goto table entries
