1 shift/reduce conflict

error:  state 14: shift/reduce conflict (shift LBRACK, reduce by rule 37)

state 0:

	program : . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	program	goto 139
	exp	goto 3
	lvalue	goto 2
	arith	goto 1

	.	error


state 1:

	exp : arith .  (reduce by rule 25)



	.	reduce by rule 25


state 2:

	exp : lvalue .  (reduce by rule 20)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 17
	DOT	shift 16
	ASSIGN	shift 15


	.	reduce by rule 20


state 3:

	program : exp .  (reduce by rule 1)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 1


state 4:

	exp : NIL .  (reduce by rule 21)



	.	reduce by rule 21


state 5:

	exp : BREAK .  (reduce by rule 35)



	.	reduce by rule 35


state 6:

	exp : LET . decs IN expseq END 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decs	goto 34
	tydec	goto 33
	vardec	goto 32
	fundec	goto 31
	empty	goto 30

	.	reduce by rule 0


state 7:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 38


	.	error


state 8:

	exp : WHILE . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 39
	lvalue	goto 2
	arith	goto 1

	.	error


state 9:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 40
	lvalue	goto 2
	arith	goto 1

	.	error


state 10:

	exp : MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 41
	lvalue	goto 2
	arith	goto 1

	.	error


state 11:

	exp : LPAREN . expseq RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 44
	lvalue	goto 2
	expseq	goto 43
	arith	goto 1
	empty	goto 42

	.	reduce by rule 0


state 12:

	exp : STRING .  (reduce by rule 24)



	.	reduce by rule 24


state 13:

	exp : INT .  (reduce by rule 23)



	.	reduce by rule 23

error:  state 14: shift/reduce conflict (shift LBRACK, reduce by rule 37)

state 14:

	exp : ID . LPAREN explist RPAREN 
	exp : ID . LBRACE reclist RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	lvalue : ID .  (reduce by rule 37)
	lvalue : ID . LBRACK exp RBRACK 

	LPAREN	shift 47
	LBRACK	shift 46
	LBRACE	shift 45


	.	reduce by rule 37


state 15:

	exp : lvalue ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 48
	lvalue	goto 2
	arith	goto 1

	.	error


state 16:

	lvalue : lvalue DOT . ID 

	ID	shift 49


	.	error


state 17:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 50
	lvalue	goto 2
	arith	goto 1

	.	error


state 18:

	arith : exp OR . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 51
	lvalue	goto 2
	arith	goto 1

	.	error


state 19:

	arith : exp AND . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 52
	lvalue	goto 2
	arith	goto 1

	.	error


state 20:

	arith : exp GE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 53
	lvalue	goto 2
	arith	goto 1

	.	error


state 21:

	arith : exp GT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 54
	lvalue	goto 2
	arith	goto 1

	.	error


state 22:

	arith : exp LE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 55
	lvalue	goto 2
	arith	goto 1

	.	error


state 23:

	arith : exp LT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 56
	lvalue	goto 2
	arith	goto 1

	.	error


state 24:

	arith : exp NEQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 57
	lvalue	goto 2
	arith	goto 1

	.	error


state 25:

	arith : exp EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 58
	lvalue	goto 2
	arith	goto 1

	.	error


state 26:

	arith : exp DIVIDE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 59
	lvalue	goto 2
	arith	goto 1

	.	error


state 27:

	arith : exp TIMES . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 60
	lvalue	goto 2
	arith	goto 1

	.	error


state 28:

	arith : exp MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 61
	lvalue	goto 2
	arith	goto 1

	.	error


state 29:

	arith : exp PLUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 62
	lvalue	goto 2
	arith	goto 1

	.	error


state 30:

	decs : empty .  (reduce by rule 5)



	.	reduce by rule 5


state 31:

	decs : fundec . decs 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decs	goto 63
	tydec	goto 33
	vardec	goto 32
	fundec	goto 31
	empty	goto 30

	.	reduce by rule 0


state 32:

	decs : vardec . decs 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decs	goto 64
	tydec	goto 33
	vardec	goto 32
	fundec	goto 31
	empty	goto 30

	.	reduce by rule 0


state 33:

	decs : tydec . decs 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	decs	goto 65
	tydec	goto 33
	vardec	goto 32
	fundec	goto 31
	empty	goto 30

	.	reduce by rule 0


state 34:

	exp : LET decs . IN expseq END 

	IN	shift 66


	.	error


state 35:

	tydec : TYPE . ID EQ ty tydec 
	tydec : TYPE . ID EQ ty 

	ID	shift 67


	.	error


state 36:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 68


	.	error


state 37:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp fundec 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp fundec 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 69


	.	error


state 38:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 70


	.	error


state 39:

	exp : WHILE exp . DO exp 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 71


	.	error


state 40:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	THEN	shift 72


	.	error


state 41:

	exp : MINUS exp .  (reduce by rule 26)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 



	.	reduce by rule 26


state 42:

	expseq : empty .  (reduce by rule 43)



	.	reduce by rule 43


state 43:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 73


	.	error


state 44:

	expseq : exp .  (reduce by rule 41)
	expseq : exp . SEMICOLON expseq 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	SEMICOLON	shift 74
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 41


state 45:

	exp : ID LBRACE . reclist RBRACE 

	ID	shift 77

	reclist	goto 76
	empty	goto 75

	.	reduce by rule 0


state 46:

	exp : ID LBRACK . exp RBRACK OF exp 
	lvalue : ID LBRACK . exp RBRACK 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 78
	lvalue	goto 2
	arith	goto 1

	.	error


state 47:

	exp : ID LPAREN . explist RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 81
	lvalue	goto 2
	explist	goto 80
	arith	goto 1
	empty	goto 79

	.	reduce by rule 0


state 48:

	exp : lvalue ASSIGN exp .  (reduce by rule 30)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 30


state 49:

	lvalue : lvalue DOT ID .  (reduce by rule 38)



	.	reduce by rule 38


state 50:

	lvalue : lvalue LBRACK exp . RBRACK 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	RBRACK	shift 82
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 51:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp OR exp .  (reduce by rule 52)
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19


	.	reduce by rule 52


state 52:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp AND exp .  (reduce by rule 51)
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20


	.	reduce by rule 51


state 53:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 
	arith : exp GE exp .  (reduce by rule 58)

	EOF	reduce by rule 58
	COMMA	reduce by rule 58
	SEMICOLON	reduce by rule 58
	RPAREN	reduce by rule 58
	RBRACK	reduce by rule 58
	RBRACE	reduce by rule 58
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 58
	OR	reduce by rule 58
	THEN	reduce by rule 58
	ELSE	reduce by rule 58
	TO	reduce by rule 58
	DO	reduce by rule 58
	IN	reduce by rule 58
	END	reduce by rule 58
	FUNCTION	reduce by rule 58
	VAR	reduce by rule 58
	TYPE	reduce by rule 58


	.	error


state 54:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp GT exp .  (reduce by rule 56)
	arith : exp . LE exp 
	arith : exp . GE exp 

	EOF	reduce by rule 56
	COMMA	reduce by rule 56
	SEMICOLON	reduce by rule 56
	RPAREN	reduce by rule 56
	RBRACK	reduce by rule 56
	RBRACE	reduce by rule 56
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 56
	OR	reduce by rule 56
	THEN	reduce by rule 56
	ELSE	reduce by rule 56
	TO	reduce by rule 56
	DO	reduce by rule 56
	IN	reduce by rule 56
	END	reduce by rule 56
	FUNCTION	reduce by rule 56
	VAR	reduce by rule 56
	TYPE	reduce by rule 56


	.	error


state 55:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp LE exp .  (reduce by rule 57)
	arith : exp . GE exp 

	EOF	reduce by rule 57
	COMMA	reduce by rule 57
	SEMICOLON	reduce by rule 57
	RPAREN	reduce by rule 57
	RBRACK	reduce by rule 57
	RBRACE	reduce by rule 57
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 57
	OR	reduce by rule 57
	THEN	reduce by rule 57
	ELSE	reduce by rule 57
	TO	reduce by rule 57
	DO	reduce by rule 57
	IN	reduce by rule 57
	END	reduce by rule 57
	FUNCTION	reduce by rule 57
	VAR	reduce by rule 57
	TYPE	reduce by rule 57


	.	error


state 56:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp LT exp .  (reduce by rule 55)
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	EOF	reduce by rule 55
	COMMA	reduce by rule 55
	SEMICOLON	reduce by rule 55
	RPAREN	reduce by rule 55
	RBRACK	reduce by rule 55
	RBRACE	reduce by rule 55
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 55
	OR	reduce by rule 55
	THEN	reduce by rule 55
	ELSE	reduce by rule 55
	TO	reduce by rule 55
	DO	reduce by rule 55
	IN	reduce by rule 55
	END	reduce by rule 55
	FUNCTION	reduce by rule 55
	VAR	reduce by rule 55
	TYPE	reduce by rule 55


	.	error


state 57:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp NEQ exp .  (reduce by rule 54)
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	EOF	reduce by rule 54
	COMMA	reduce by rule 54
	SEMICOLON	reduce by rule 54
	RPAREN	reduce by rule 54
	RBRACK	reduce by rule 54
	RBRACE	reduce by rule 54
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 54
	OR	reduce by rule 54
	THEN	reduce by rule 54
	ELSE	reduce by rule 54
	TO	reduce by rule 54
	DO	reduce by rule 54
	IN	reduce by rule 54
	END	reduce by rule 54
	FUNCTION	reduce by rule 54
	VAR	reduce by rule 54
	TYPE	reduce by rule 54


	.	error


state 58:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp EQ exp .  (reduce by rule 53)
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	EOF	reduce by rule 53
	COMMA	reduce by rule 53
	SEMICOLON	reduce by rule 53
	RPAREN	reduce by rule 53
	RBRACK	reduce by rule 53
	RBRACE	reduce by rule 53
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	AND	reduce by rule 53
	OR	reduce by rule 53
	THEN	reduce by rule 53
	ELSE	reduce by rule 53
	TO	reduce by rule 53
	DO	reduce by rule 53
	IN	reduce by rule 53
	END	reduce by rule 53
	FUNCTION	reduce by rule 53
	VAR	reduce by rule 53
	TYPE	reduce by rule 53


	.	error


state 59:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp DIVIDE exp .  (reduce by rule 50)
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 



	.	reduce by rule 50


state 60:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp TIMES exp .  (reduce by rule 49)
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 



	.	reduce by rule 49


state 61:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp MINUS exp .  (reduce by rule 48)
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 48


state 62:

	arith : exp . PLUS exp 
	arith : exp PLUS exp .  (reduce by rule 47)
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	TIMES	shift 27
	DIVIDE	shift 26


	.	reduce by rule 47


state 63:

	decs : fundec decs .  (reduce by rule 4)



	.	reduce by rule 4


state 64:

	decs : vardec decs .  (reduce by rule 3)



	.	reduce by rule 3


state 65:

	decs : tydec decs .  (reduce by rule 2)



	.	reduce by rule 2


state 66:

	exp : LET decs IN . expseq END 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 44
	lvalue	goto 2
	expseq	goto 83
	arith	goto 1
	empty	goto 42

	.	reduce by rule 0


state 67:

	tydec : TYPE ID . EQ ty tydec 
	tydec : TYPE ID . EQ ty 

	EQ	shift 84


	.	error


state 68:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 86
	ASSIGN	shift 85


	.	error


state 69:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp fundec 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp fundec 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 87


	.	error


state 70:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 88
	lvalue	goto 2
	arith	goto 1

	.	error


state 71:

	exp : WHILE exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 89
	lvalue	goto 2
	arith	goto 1

	.	error


state 72:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 90
	lvalue	goto 2
	arith	goto 1

	.	error


state 73:

	exp : LPAREN expseq RPAREN .  (reduce by rule 22)



	.	reduce by rule 22


state 74:

	expseq : exp SEMICOLON . expseq 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 44
	lvalue	goto 2
	expseq	goto 91
	arith	goto 1
	empty	goto 42

	.	reduce by rule 0


state 75:

	reclist : empty .  (reduce by rule 61)



	.	reduce by rule 61


state 76:

	exp : ID LBRACE reclist . RBRACE 

	RBRACE	shift 92


	.	error


state 77:

	reclist : ID . EQ exp 
	reclist : ID . EQ exp COMMA reclist 

	EQ	shift 93


	.	error


state 78:

	exp : ID LBRACK exp . RBRACK OF exp 
	lvalue : ID LBRACK exp . RBRACK 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	RBRACK	shift 94
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	error


state 79:

	explist : empty .  (reduce by rule 46)



	.	reduce by rule 46


state 80:

	exp : ID LPAREN explist . RPAREN 

	RPAREN	shift 95


	.	error


state 81:

	explist : exp .  (reduce by rule 44)
	explist : exp . COMMA explist 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	COMMA	shift 96
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 44


state 82:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 39)



	.	reduce by rule 39


state 83:

	exp : LET decs IN expseq . END 

	END	shift 97


	.	error


state 84:

	tydec : TYPE ID EQ . ty tydec 
	tydec : TYPE ID EQ . ty 

	ID	shift 101
	LBRACE	shift 100
	ARRAY	shift 99

	ty	goto 98

	.	error


state 85:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 102
	lvalue	goto 2
	arith	goto 1

	.	error


state 86:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 103


	.	error


state 87:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp fundec 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp fundec 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 106

	tyfields	goto 105
	empty	goto 104

	.	reduce by rule 0


state 88:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	TO	shift 107


	.	error


state 89:

	exp : WHILE exp DO exp .  (reduce by rule 33)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 33


state 90:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 32)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	ELSE	shift 108


	.	reduce by rule 32


state 91:

	expseq : exp SEMICOLON expseq .  (reduce by rule 42)



	.	reduce by rule 42


state 92:

	exp : ID LBRACE reclist RBRACE .  (reduce by rule 28)



	.	reduce by rule 28


state 93:

	reclist : ID EQ . exp 
	reclist : ID EQ . exp COMMA reclist 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 109
	lvalue	goto 2
	arith	goto 1

	.	error


state 94:

	exp : ID LBRACK exp RBRACK . OF exp 
	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 40)

	OF	shift 110


	.	reduce by rule 40


state 95:

	exp : ID LPAREN explist RPAREN .  (reduce by rule 27)



	.	reduce by rule 27


state 96:

	explist : exp COMMA . explist 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 81
	lvalue	goto 2
	explist	goto 111
	arith	goto 1
	empty	goto 79

	.	reduce by rule 0


state 97:

	exp : LET decs IN expseq END .  (reduce by rule 36)



	.	reduce by rule 36


state 98:

	tydec : TYPE ID EQ ty . tydec 
	tydec : TYPE ID EQ ty .  (reduce by rule 7)

	TYPE	shift 35

	tydec	goto 112

	.	reduce by rule 7


state 99:

	ty : ARRAY . OF ID 

	OF	shift 113


	.	error


state 100:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 106

	tyfields	goto 114
	empty	goto 104

	.	reduce by rule 0


state 101:

	ty : ID .  (reduce by rule 14)



	.	reduce by rule 14


state 102:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 8)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 8


state 103:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 115


	.	error


state 104:

	tyfields : empty .  (reduce by rule 19)



	.	reduce by rule 19


state 105:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 116


	.	error


state 106:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 117


	.	error


state 107:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 118
	lvalue	goto 2
	arith	goto 1

	.	error


state 108:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 119
	lvalue	goto 2
	arith	goto 1

	.	error


state 109:

	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 
	reclist : ID EQ exp .  (reduce by rule 59)
	reclist : ID EQ exp . COMMA reclist 

	COMMA	shift 120
	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 59


state 110:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 121
	lvalue	goto 2
	arith	goto 1

	.	error


state 111:

	explist : exp COMMA explist .  (reduce by rule 45)



	.	reduce by rule 45


state 112:

	tydec : TYPE ID EQ ty tydec .  (reduce by rule 6)



	.	reduce by rule 6


state 113:

	ty : ARRAY OF . ID 

	ID	shift 122


	.	error


state 114:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 123


	.	error


state 115:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 124
	lvalue	goto 2
	arith	goto 1

	.	error


state 116:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 126
	EQ	shift 125


	.	error


state 117:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 127


	.	error


state 118:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	DO	shift 128


	.	error


state 119:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 31)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 31


state 120:

	reclist : ID EQ exp COMMA . reclist 

	ID	shift 77

	reclist	goto 129
	empty	goto 75

	.	reduce by rule 0


state 121:

	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 29)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 29


state 122:

	ty : ARRAY OF ID .  (reduce by rule 16)



	.	reduce by rule 16


state 123:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 15)



	.	reduce by rule 15


state 124:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 9)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 9


state 125:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 130
	lvalue	goto 2
	arith	goto 1

	.	error


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 131


	.	error


state 127:

	tyfields : ID COLON ID .  (reduce by rule 17)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 132


	.	reduce by rule 17


state 128:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 133
	lvalue	goto 2
	arith	goto 1

	.	error


state 129:

	reclist : ID EQ exp COMMA reclist .  (reduce by rule 60)



	.	reduce by rule 60


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp . fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 12)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	FUNCTION	shift 37

	fundec	goto 134

	.	reduce by rule 12


state 131:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 135


	.	error


state 132:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 106

	tyfields	goto 136
	empty	goto 104

	.	reduce by rule 0


state 133:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 34)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18


	.	reduce by rule 34


state 134:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp fundec .  (reduce by rule 10)



	.	reduce by rule 10


state 135:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 137
	lvalue	goto 2
	arith	goto 1

	.	error


state 136:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 18)



	.	reduce by rule 18


state 137:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp . fundec 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 13)
	arith : exp . PLUS exp 
	arith : exp . MINUS exp 
	arith : exp . TIMES exp 
	arith : exp . DIVIDE exp 
	arith : exp . AND exp 
	arith : exp . OR exp 
	arith : exp . EQ exp 
	arith : exp . NEQ exp 
	arith : exp . LT exp 
	arith : exp . GT exp 
	arith : exp . LE exp 
	arith : exp . GE exp 

	PLUS	shift 29
	MINUS	shift 28
	TIMES	shift 27
	DIVIDE	shift 26
	EQ	shift 25
	NEQ	shift 24
	LT	shift 23
	LE	shift 22
	GT	shift 21
	GE	shift 20
	AND	shift 19
	OR	shift 18
	FUNCTION	shift 37

	fundec	goto 138

	.	reduce by rule 13


state 138:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp fundec .  (reduce by rule 11)



	.	reduce by rule 11


state 139:


	EOF	accept


	.	error

471 of 997 action table entries left after compaction
153 goto table entries
